main="Show each city total spending and arrange it by total descending.",
xlab="Total",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
par(mfrow=c(2,2))
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "blue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Totals",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
library(dplyr)
library(cluster)
clusters <- as.integer(readline("Enter number of clusters(between 2 and 4): "))
if (clusters > 1 & clusters < 5 ) {
new_data <- select(data_set,total,age)
final_data <-kmeans(new_data,clusters)
final_data <- final_data$cluster
final_data <- data.frame(select(data_set,age,total,customer),group = final_data)
(final_data)
}else
print("wrong number of cluster")
if (clusters > 1 & clusters < 5 ) {
new_data <- select(data_set,total,age)
final_data <-kmeans(new_data,clusters)
final_data <- final_data$cluster
final_data <- data.frame(select(data_set,age,total,customer),group = final_data)
head(final_data)
}else
print("wrong number of cluster")
library(arules)
min_supp<-as.numeric(readline("Enter Number of min_supp"))
library(arules)
min_supp<-as.numeric(readline("Enter Number of min_supp"))
min_conf<-as.numeric(readline("Enter Number of min_conf"))
if((min_supp>0.001 & min_supp<1)&(min_conf>0.001 & min_conf<1)){
tdata <-read.transactions("C:\\Users\\Ahmed Elsayed\\Desktop\\Project_1\\new .txt",sep=",")
apriori_rules <- apriori(tdata,parameter=list(supp= min_supp ,conf= min_conf,minlen=2))
inspect(apriori_rules)
}else{
print("Enter the input correct")
}
library(arules)
min_supp<-as.numeric(readline("Enter Number of min_supp"))
min_conf<-as.numeric(readline("Enter Number of min_conf"))
if((min_supp>0.001 & min_supp<1)&(min_conf>0.001 & min_conf<1)){
tdata <-read.transactions("C:\\Users\\Ziad\\Desktop\\data science\\Project_1\\new .txt",sep=",")
apriori_rules <- apriori(tdata,parameter=list(supp= min_supp ,conf= min_conf,minlen=2))
inspect(apriori_rules)
}else{
print("Enter the input correct")
}
min_supp<-as.numeric(readline("Enter Number of min_supp"))
0.07
min_conf<-as.numeric(readline("Enter Number of min_conf"))
if((min_supp>0.001 & min_supp<1)&(min_conf>0.001 & min_conf<1)){
datasetpath<-readline("enter the path of the dataset file")
"C:\Users\Ziad\Desktop\data science\Project_1\new .txt"
if((min_supp>0.001 & min_supp<1)&(min_conf>0.001 & min_conf<1)){
datasetpath<-readline("enter the path of the dataset file")
library("readxl")
products<-read_excel(datasetpath)
apriori_rules <- apriori(tdata,parameter=list(supp= min_supp ,conf= min_conf,minlen=2))
inspect(apriori_rules)
}else{
print("Enter the input correct")
}
if((min_supp>0.001 & min_supp<1)&(min_conf>0.001 & min_conf<1)){
datasetpath<-readline("enter the path of the dataset file")
library("readxl")
products<-read_excel(datasetpath)
apriori_rules <- apriori(tdata,parameter=list(supp= min_supp ,conf= min_conf,minlen=2))
inspect(apriori_rules)
}else{
print("Enter the input correct")
}
install.packages("readxl")
install.packages("readxl")
####Assess and clean your data if needed
install.packages("readxl")
library("readxl")
library(dplyr)
library(dplyr)
datasetpath<-readline("enter the path of the dataset file")
products<-read_excel(datasetpath)
datasetpath<-readline("enter the path of the dataset file")
products<-read_excel(datasetpath)
####Assess and clean your data if needed
install.packages("readxl")
install.packages("readxl")
####Assess and clean your data if needed
install.packages("readxl")
install.packages("readxl")
products<-read_excel(datasetpath)
datasetpath<-readline("enter the path of the dataset file")
products<-read_excel(datasetpath)
library("readxl")
library(dplyr)
data_set <-read_excel("..\\Project_1\\grc.xls")
data_set
tdata <-read.transactions("..\\Project_1\\new .txt",sep=",")
library("readxl")
library(dplyr)
data_set <-read_excel("..\\Project_1\\grc.xls")
data_set
par(mfrow=c(3,2))
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "blue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Totals",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
plot(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
#Compare cash and credit totals.
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
install.packages("readxl")
library("readxl")
library(dplyr)
data_set <-read_excel("..\\Project_1\\grc.xls")
data_set
install.packages("readxl")
library("readxl")
library(dplyr)
data_set <-read_excel("..\\Project_1\\grc.xls")
data_set
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
install.packages("dplyr")
install.packages("dplyr")
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
library(dplyr)
#Compare cash and credit totals.
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
library(dplyr)
#Compare cash and credit totals.
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
total_by_age<-group_by(data_set,age)
total_by_age<- summarise(total_by_age,sum_total=sum(total))
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "skyblue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
total_by_age<-group_by(data_set,age)
total_by_age<- summarise(total_by_age,sum_total=sum(total))
plot(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
total_by_city<-group_by(data_set,city)
total_by_city<- summarise(total_by_city,sum_total=sum(total))
total_by_city_arrange<- arrange(total_by_city,desc(sum_total))
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Total",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
###The distribution of total spending
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
par(mfrow=c(3,2))
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "blue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Totals",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
plot(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
par(mfrow=c(3,2))
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "blue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Totals",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
plot(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
par(mfrow=c(3,2))
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "blue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Totals",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
plot(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
library("readxl")
library(dplyr)
data_set <-read_excel("..\\Project_1\\grc.xls")
data_set
##   install.packages("dplyr")
library(dplyr)
#Compare cash and credit totals.
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
##   install.packages("dplyr")
library(dplyr)
#Compare cash and credit totals.
table(data_set$paymentType)
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
#Compare each age and sum of total spending.
total_by_age<-group_by(data_set,age)
total_by_age<- summarise(total_by_age,sum_total=sum(total))
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "skyblue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
###another sol
total_by_age<-group_by(data_set,age)
total_by_age<- summarise(total_by_age,sum_total=sum(total))
plot(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
total_by_city<-group_by(data_set,city)
total_by_city<- summarise(total_by_city,sum_total=sum(total))
total_by_city_arrange<- arrange(total_by_city,desc(sum_total))
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Total",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
par(mfrow=c(3,2))
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "blue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Totals",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
plot(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
par(mfrow=c(3,2))
pie(
x=table(data_set$paymentType),
main="Compare cash and credit totals"
)
barplot(
height = total_by_age$age,
name=total_by_age$sum_total ,
col= "blue",
main="Compare each age and sum of total spending",
xlab="Age",
ylab="Totals",
horiz = TRUE ,
las = 1,
)
barplot(
height = total_by_city_arrange$sum_total,
name=total_by_city_arrange$city ,
col= "orange",
main="Show each city total spending and arrange it by total descending.",
xlab="Totals",
ylab="Cities",
horiz = TRUE ,
las = 1,
)
boxplot(
x=data_set$total,
xlab="Total",
main="The distribution of total spending"
)
plot(
x= total_by_age$age,
y =total_by_age$sum_total ,
xlab="Age" ,
ylab="total" ,
main="Compare each age and sum of total spending",
)
